//clear float
.clearfix(){
    *zoom:1;//for IE6/7
    &:before,
    &:after{
        display:table;
        content:"";
        // Fixes Opera/contenteditable bug:
/*contenteditable   指定是否允许用户编辑内容  IE也支持
contenteditable=""/events/caret/plaintext-onliy/true/false
contenteditable模拟文本域可以实现高度跟随内容自动撑开的效果
*/	
    	// http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
/*这个网站是介绍一个新的清除浮动的方法
*/        
        line-height:0;
    }
    &:after{
        clear:both;
    }
}

//inline-block fix
/*for IE6/7首先让 block 元素转化为 inline 元素，强制其不换行；然后通过 zoom:1 触发 hasLayout，使其可以设置宽高
用了inline-block之后,元素间会产生多余空白,这是inline-block本身特性,可以设置font-size:0;来解决
*/
.inline-block-fix(){
    display:inline-block;
    *display:inline; //for IE6/7
    *zoom:1;  //for IE6/7
}

//opacity
.opacity(@opacity){
    opacity: @opacity;
	@opacity-ie: @opacity * 100;
	filter: ~"alpha(opacity=@{opacity-ie})"; // IE8 
	filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=@opacity-ie);
}

//animation
/*@duration 持续时间
animation 属性是一个简写属性，用于设置六个动画属性：
animation-name
animation-duration
animation-timing-function
animation-delay
animation-iteration-count
animation-direction
*/
.animated(@animateName,@delay,@duration,@fillMode:both,@count:1,@direction:normal){
    -webkit-animation-name:             @animateName;     
    -webkit-animation-delay:            @delay;
    -webkit-animation-duration:         @duration;
    -webkit-animation-fill-mode:        @fillMode;
    -webkit-animation-direction:        @direction;
    -webkit-animation-iteration-count:  @count;
    
    -moz-animation-name:            @animateName;     
    -moz-animation-delay:           @delay;
    -moz-animation-duration:        @duration;
    -moz-animation-fill-mode:       @fillMode;
    -moz-animation-direction:       @direction;
    -moz-animation-iteration-count: @count;
    
    animation-name:             @animateName;    
    animation-delay:            @delay;
    animation-duration:         @duration;
    animation-fill-mode:        @fillMode;
    animation-direction:        @direction;
    animation-iteration-count:  @count;
    visibility: visible !important;
}

//transition
/*transition 属性是一个简写属性，用于设置四个过渡属性：
transition-property
transition-duration
transition-timing-function
transition-delay
*/
.transition(...){
    @props: ~`"@{arguments}".replace(/[\[\]]/g, '')`;
    -webkit-transition: @props;
    -moz-transition:    @props;
    -o-transition:      @props;
    transition:         @props;       
}



//transform
/*
transform的属性包括：rotate() / skew() / scale() / translate(,) ，分别还有x、y之分，
旋转/倾斜/比例/变动，位移
.da{
    -webkit-transition:all 1s ease-in-out;
    -moz-transition:all 1s ease-in-out
    }
.da:hover{
    -webkit-transform:rotate(360deg) skew(-20deg) scale(3.0) translate(100px,0);
    -moz-transform:rotate(360deg) skew(-20deg)scale(3.0) translate(100px,0)
    }
*/
.transform(@param) {
    @props: ~`"@{arguments}".replace(/[\[\]]/g, '')`;
    -webkit-transform: @props;
    -moz-transform:    @props;
    -o-transform:      @props;
    transform:         @props;    
}


//user-select设置或检索是否允许用户选中文本
/*user-select：none | text | all | element
none：文本不能被选择
text：可以选择文本
all：当所有内容作为一个整体时可以被选择。如果双击或者在上下文上点击子元素，那么被选择的部分将是以该子元素向上回溯的最高祖先元素。
element：可以选择文本，但选择范围受元素边界的约束
*/
.user-select(@param) {
    -webkit-user-select: @param;
    -moz-user-select:    @param;
    -o-user-select:      @param;
    user-select:         @param;
}

/*text-overflow 溢出显示省略号 */
.text-overflow() {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

/*如果设置四个值，则依次对应左上角、右上角、右下角、左下角（顺时针顺序）。
如果设置三个值，表示左上角使用第一个值，右上角和左下角使用第二个值，右下角使用第三个值
如果设置两个值，表示左上角和右下角使用第一个值，右上角和左下角使用第二个值
如果设置1个值，表示4个圆角都使用这个值
*/
.border-radius(@value) {
    -webkit-border-radius: @value;
    -moz-border-radius: @value;
    -o-border-radius: @value;
    border-radius: @value;
}
/*投影方式   可选  默认投影方式是外阴影；如取其唯一值“inset”，其投影为内阴影； 
X轴偏移量    如果值为正值，则阴影在对象的右边，其值为负值时，阴影在对象的左边；
Y轴偏移量    如果为正值，阴影在对象的底部，其值为负值时，阴影在对象的顶部；
阴影模糊半径  只能是为正值,其值越大阴影的边缘就越模糊；
阴影扩展半径  如果值为正，则整个阴影都延展扩大，反之值为负值时，则缩小；
阴影颜色;    
*/
.box-shadow(@value) {
    -webkit-box-shadow: @value;
    -moz-box-shadow: @value;
    -o-box-shadow: @value;
    box-shadow: @value;
}

/**/
.arrow {
    &:after, &:before {
        position: absolute;
        border: 0 solid transparent;
        content: '';
        z-index: 1;
    }
    
    &:before {
        z-index: 2;
    }
}














